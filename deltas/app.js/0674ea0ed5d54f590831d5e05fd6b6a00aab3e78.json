["function _5211f4ad5c1e5e8cb00aba809ae4202bece8d218(){};",258640,37,92,824180,2031669,4820,"Ext.ns(\"ReminDoo\");\r\ndocument.addEventListener(\"deviceready\", function() {\r\n    console.log(\"deviceready\");\r\n    ReminDoo.UUID = device.uuid;\r\n    document.addEventListener(\"backbutton\", function() {\r\n        var p",2549460,42,"var canPop = false;\r\n        if (p.beforePop) {\r\n            canPop = p.beforePop();\r\n        }\r\n        if (canPop) {\r\n            p.pop",1270112,35,2554413,39,"ReminDoo.T('ExitButtonPressed')",2554454,69,"QuitProgram",2554538,97,"\"No\"",2554642,130,"\"Yes\"",2554642,37,"yes',\r\n    ",2451000,50,2512328,43,2451199,37,2451232,45,2450536,46,140176,39,");\r\n        }\r\n    }, false);\r\n}, false);\r\nExt.define('ReminDoo.Component', {\r\n    override: 'Ext.Component',\r\n",801435,41,1684511,38,"false\r\n        ]);\r\n    },\r\n",799998,41,1684511,38,"false\r\n        ]);\r\n    }\r\n});\r\nReminDoo.justBooted = true;\r\nReminDoo.tzOffset = 8;\r\nReminDoo.refreshSec = 60;\r\nReminDoo.Counter = ReminDoo.refreshSec + 1;\r\nReminDoo.player = null;\r\nReminDoo.viewMode = 0;\r\nReminDoo.SyncRequest = false;\r\nReminDoo.LastUpdate = null;\r\nReminDoo.Session = {};\r\nReminDoo.util = {};\r\nReminDoo.timeOffset = 2 * 60 * 60;\r\nReminDoo.util.removeTime = function(d) {\r\n    return Ext.DateExtras.clearTime(d);\r\n};\r\nReminDoo.util.parseBool = function(v) {\r\n    return (v == \"True\") || (v == \"true\") || (v == \"1\") || (v == true);\r\n};\r\nReminDoo.util.parseDate = function(v) {\r\n    if ((typeof v) == \"string\") {\r\n        return new Date((Number(v) - ReminDoo.timeOffset) * 1000);\r\n    }\r\n    return v;\r\n};\r\nReminDoo.util.offsetDates = function(o) {\r\n    for (var p in o) {\r\n        if (Ext.isDate(o[p])) {\r\n            o[p] = Ext.DateExtras.add(o[p], Ext.Date.SECOND, ReminDoo.timeOffset);\r\n        }\r\n    }\r\n};\r\nReminDoo.mask = function() {\r\n    Ext.Viewport.setMasked({\r\n",2245023,36,"message: \"\"\r\n    });\r\n};\r\nReminDoo.unMask = function() {\r\n    Ext.Viewport.setMasked(false);\r\n};\r\nString.prototype.splice = function(idx, rem, s) {\r\n    return (this.slice(0, idx) + s + this.slice(idx + Math.abs(rem)));\r\n};\r\nReminDoo.request = function(query, method, params, onSuccess, onFailure, onResume) {\r\n    //Ext.apply(params,{query:query});\r\n    var urlEncodedParams = Ext.urlEncode(params);\r\n    Ext.Ajax.request({\r\n",1157437,33,"url: ReminDoo.url + \"?query=\" + query,\r\n        params: urlEncodedParams,\r\n        //headers : {},\r\n        //jsonData:jsonData,\r\n",1136301,43,131165,37,"var o = Ext.JSON.decode(response.",2249773,32,"if (onSuccess) {\r\n                    onSuccess(o, opt",667424,38,2557666,37,"debug(\"e",2517774,34,"if (onFailure) {\r\n                    onFailure(response, opt",783808,59,1136479,35,"\r\n            console.debug(\"failure\");\r\n            if (onFailure) {\r\n                if (onFailure) {\r\n                    onFailure(response, opt",667424,62,"console.log(\"******** Failed \" + JSON.stringify(response));\r\n                var header = \"Server Eror\";\r\n                var msg = JSON.stringify(response);\r\n                //\"Contact Support\";\r\n",2556333,60,"Ext.Msg.alert(header, msg,",174208,35,"    Ext.Msg.hide(",71440,32,"onResu",2296847,35,"onResume(",229984,51,"});\r\n",2525236,38,"}\r\n        }\r\n    });\r\n};\r\nReminDoo.get = function(query, params, onSuccess, onFailure, onResume) {\r\n    ReminDoo.request(query, \"GET\", params, onSuccess, onFailure);\r\n};\r\nReminDoo.post = function(query, params, onSuccess, onFailure, onResume) {\r\n    ReminDoo.request(query, \"POST\", params, function(response, opts) {\r\n        onSuccess(response, opts);\r\n        ReminDoo.PublishContacts(Ext.apply(params, {\r\n            query: query\r\n        }));\r\n    }, onFailure);\r\n};\r\nReminDoo.makeVoiceMessageURL = function(IdRec) {\r\n    return ReminDoo.url + \"?query=GetVoiceMail&IdRec=\" + IdRec;\r\n};\r\nReminDoo.updateView = function(clock) {\r\n    var btnToday = clock.down(\"#today\");\r\n    var btnPlus = clock.down('#button-plus');\r\n    var btnMinus = clock.down('#button-minus');\r\n    var now = new Date();\r\n",2483256,32,"now) + \" \" + Ext.Date.format(now, \"d/m H:i\");\r\n    if (!ReminDoo.isCurrentDate()) {\r\n        btnToday.show();\r\n        s = \"*** \" + ReminDoo.getWeekDay(ReminDoo.theDate) + \" \" + Ext.Date.format(ReminDoo.theDate, \"d/m\") + \" ***\";\r\n    } else {\r\n        btnToday.hide();\r\n    }\r\n    clock.setTitle(s);\r\n",2482990,49,"ReminDoo.theDate",2483041,33,2483078,46,"ReminDoo.theDate",2483126,34,"btnPlus.setText(sDatePlus);\r\n    btnMinus.setText(sDateMinus);\r\n};\r\nReminDoo.filterDate = function(viewMode) {\r\n    ReminDoo.viewMode += viewMode;\r\n    if (ReminDoo.viewMode > 1) {\r\n        ReminDoo.viewMode = 1;\r\n    }\r\n    if (ReminDoo.viewMode < -1) {\r\n        ReminDoo.viewMode = -1;\r\n    }\r\n    var tb = Ext.getCmp(\"clock\");\r\n    var ",614034,32,"());\r\n    d",2484695,35,"ReminDoo.viewMode);\r\n    var sDate = Ext.Date.format(dt, \"d/m/y\");\r\n    if (ReminDoo.viewMode !== 0) {\r\n        tb.setTitle(\"*** \" + sDate + \" ***\");\r\n    }\r\n    var dailyCount = 0;\r\n    Ext.getStore(\"Daily\").clearFilter();\r\n    Ext.getStore(\"Daily\").filter(function(item) {\r\n        var result = Ext.Date.format(item.get(\"start\"), \"d/m/y\") == sDate;\r\n        if (result)  {\r\n            dailyCount++",1100111,32,"return result;\r\n    });\r\n    Ext.getStore(\"Event\").clearFilter();\r\n    Ext.getStore(\"Event\").filter(function(item) {\r\n        var start = item.get(\"start\");",661935,33,"start, \"d/m/y\") == sDate;\r\n    });\r\n    var c = Ext.getCmp(\"dailylist\");\r\n    if (dailyCount === 0) {\r\n        c.hide();\r\n    } else {\r\n        c.show();\r\n        c.setHeight(c.getItemHeight() * dailyCount);\r\n    }\r\n    ReminDoo.updateView();\r\n};\r\nReminDoo.showMessageCount = function() {\r\n    var store = Ext.getStore(\"Messages\");\r\n    var nCount = 0;\r\n",2524995,43,"var isReceive = record.get(\"isReceive",2545847,118,";\r\n        if ((!isReceive) ||",2545985,34,") {\r\n            nCount++;\r\n        }\r\n    });\r\n    ReminDoo.getController(\"Message\").setMessageCount(nCount);\r\n};\r\nReminDoo.isOffline = false;\r\nReminDoo.lostConnection = function(res) {\r\n",2552880,35,"lostConnection();\r\n    ReminDoo.isOffline = true;\r\n};\r\nReminDoo.resumeConnection = function(res) {\r\n",2552880,35,"resumeConnection();\r\n    ReminDoo.isOffline = false;\r\n};\r\n/*\nReminDoo.loadMessages = function (isFirst) {\n\tvar store  = Ext.getStore(\"Messages\");\n\t\n\tvar maxId = -1;\n\tstore.each(function(record) {\n\t\tmaxId = Math.max(maxId,record.get(\"IdRec\"));\n\t});\n\tvar params = Ext.apply({},ReminDoo.Session);\n\tExt.apply(params,{IdRec:maxId});\n\n\tReminDoo.get(\"InMessages\",params,\n\t\tfunction(o){\n\t\t\tif (o.success) {\n\t\t\t\tif (o.Table.length>0) {\n\t\t\t\t\tstore.insert(0,o.Table);\n\t\t\t\t\tif (!isFirst) {\n\t\t\t\t\t\tReminDoo.Play(ReminDoo.NEW_MESSAGE);\n\t\t\t\t\t}\t\n\t\t\t\t}\n\t\t\t\tReminDoo.showMessageCount();\n\t\t\t}\n\t\t},\n\t    ReminDoo.lostConnection\n\t    );\n};\nReminDoo.maxIdRec = -1;\n*/\r\nReminDoo.util.timeToMinutes = function(t) {\r\n    return Ext.Date.diff(Ext.Date.clearTime(t, true), t, Ext.Date.MINUTE);\r\n};\r\nReminDoo.util.diffMinutes = function(min, max) {\r\n    return this.timeToMinutes(max) - this.timeToMinutes(min);\r\n};\r\nReminDoo.isCurrentDate = function() {\r\n    var result = Ext.Date.format(ReminDoo.currentDate, \"d/m/y\") == Ext.Date.format(ReminDoo.theDate, \"d/m/y\");\r\n    return result;\r\n};\r\nReminDoo.isSameDate = function(d1, d2) {\r\n    var result = Ext.Date.format(d1, \"d/m/y\") == Ext.Date.format(d2, \"d/m/y\");\r\n    return result;\r\n};\r\n/*\n\nReminDoo.loadEvents = function (isFirst,isTimeout) {\n\n\tvar dStore  = Ext.getStore(\"Daily\");\n\tvar hStore  = Ext.getStore(\"Hourly\");\n\t\n    //dStore.suspendEvents();\n\t//hStore.suspendEvents();\n\n    // mark fro deletion\n    dStore.each(function(record){record.set(\"mark\",true);});\n    hStore.each(function(record){record.set(\"mark\",true);});\n\t\n\tReminDoo.maxIdRec = -1;\n\tvar params = Ext.apply(\n\t\t{\n\t\t\tIdRec : ReminDoo.maxIdRec,\n\t\t\tDate  : ReminDoo.theDate\n\t\t},\n\t\tReminDoo.Session);\n\t\n\n\n\n\tReminDoo.get(\"GetPersonEvents\",\n\t\tparams,\n\t\tfunction(o) {\n\t\t\tif (o.success) {\n\t\t\t\t//dStore.suspendEvents();\n\t\t\t\t//hStore.suspendEvents();\n\n                if (ReminDoo.isOffline) {\n                \tReminDoo.resumeConnection();\t\n                }\n\n\n\t\t\t\tExt.getCmp('last-update').removeCls(\"error\");\n\t\t\t\tReminDoo.LastUpdate = new Date();\n\t\t\t\tExt.getCmp('last-update').setHtml(Ext.Date.format(ReminDoo.LastUpdate,\"H:i\"));\n\n\t\t\t\tvar hasNew = false;\n\n\t\t\t\to.Table.forEach(function(d) {\n\t\t\t\t\tvar IdRec = Number(d.IdRec);\n\t\t\t\t\tvar isHidden = d.Hidden;\n\t\t\t\t\tReminDoo.maxIdRec = Math.max(ReminDoo.maxIdRec,IdRec);\n\t\t\t\t\tif (ReminDoo.util.parseBool(d.isDay)) {\n\t\t\t\t\t\tvar rec = dStore.getById(d.IdRec);\n\t\t\t\t\t\tif (rec) {\n\t\t\t\t\t\t\trec.set(\"mark\",false);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tdStore.add(d);\t\n\t\t\t\t\t\t\thasNew = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar record = hStore.getById(d.IdRec);\n\t\t\t\t\t\tif (record) {\n\t\t\t\t\t\t\trecord.set(\"mark\",false);\n\t\t\t\t\t\t\trecord.set(\"isDay\",d.isDay);\n\t\t\t\t\t\t\trecord.set(\"StartTime\",d.StartTime);\n\t\t\t\t\t\t\trecord.set(\"EndTime\",d.EndTime);\n\t\t\t\t\t\t\trecord.set(\"Name\",d.Name);\n\t\t\t\t\t\t\trecord.set(\"Confirmation\",d.Confirmation);\n\t\t\t\t\t\t\trecord.set(\"Hidden\",isHidden);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\trecord = hStore.add(d)[0];\n\t\t\t\t\t\t\thasNew = hasNew || !isHidden;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\tif (hasNew && isTimeout) {\n\t\t\t\t\tReminDoo.Play(ReminDoo.NEW_EVENT);\n\t\t\t\t}\n                \n                var a = [];\n\t\t\t    dStore.each(\n\t\t\t    \tfunction(record) {\n\t\t\t    \t\tif (record.get(\"mark\")) {\n\t\t\t    \t\t\ta.push(record);\n\t\t\t    \t\t}\n\t\t\t    \t});\n\t\t\t    dStore.remove(a);\n\n\t\t\t\tvar theTime = new Date();\n\t\t\t    a = [];\n\t\t\t    hStore.clearFilter();\n\n\n\n\t\t\t    hStore.each(\n\t\t\t    \tfunction(record) {\n\t\t\t    \t\tif (record.get(\"mark\")) {\n\t\t\t    \t\t\ta.push(record);\n\t\t\t    \t\t} else {\n\n\t\t\t\t\t\t\tif (ReminDoo.isCurrentDate()) {\n\t\t\t\t\t\t\t\tvar mi = ReminDoo.util.diffMinutes(theTime,record.get(\"StartTime\"));\n\t\t\t\t\t\t\t\tvar isConfirmation = record.get(\"Confirmation\");\n\t\t\t\t\t\t\t\tvar isHidden = record.get(\"Hidden\");\n\t\t\t\t\t\t\t\tif ((mi===0) && (isConfirmation)) {\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tReminDoo.Confirm(\n\t\t\t\t\t\t\t\t\t\t  record.get(\"Name\"),\n\t\t\t\t\t\t\t              function () { \n\t\t\t\t\t\t\t              \t",2503738,32,"\n\t\t\t\t\t\t\t              \tReminDoo.post(\"ConfirmEvent\",{IdRec:IdRec},\n\t\t\t\t\t\t\t              \t\tfunction(res){\n\t\t\t\t\t\t\t              \t\t\tReminDoo.StopPlay();\n\t\t\t\t\t\t\t              \t\t\trecord.set(\"state\",\"elapsed-event\");\n\t\t\t\t\t\t\t\t              \t});\n\t\t\t\t\t\t\t              },\n\t\t\t\t\t\t\t              Ext.emptyFn\n\t\t\t\t\t\t\t              ,\n\t\t\t\t\t\t\t              10\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t} else if (!isHidden && ((mi===60) || (mi===30) || (mi===10) || (mi===0))) {\n\t\t\t\t\t\t\t\t\tconsole.debug(\"reminder\",mi,record);\n\t\t\t\t\t\t\t\t\trecord.set(\"state\",\"active-event\");\n\t\t\t\t\t\t\t\t\trecord.set(\"countDownMinutes\",mi);\n\t\t\t\t\t\t\t\t\tReminDoo.Play(ReminDoo.EVENT);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\trecord.set(\"state\",\"\");\n\t\t\t\t\t\t\t\t\tif (isHidden) {\n\t\t\t\t\t\t\t\t\t\trecord.set(\"state\",\"hidden-event\");\n\t\t\t\t\t\t\t\t\t} else if (mi<0) {\n\t\t\t\t\t\t\t\t\t\tmi = ReminDoo.util.diffMinutes(theTime,record.get(\"EndTime\"));\n\t\t\t\t\t\t\t\t\t\tif (mi<0) {\n\t\t\t\t\t\t\t\t\t\t\trecord.set(\"state\",\"elapsed-event\");\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tif ((mi>0) && (mi<60)) {\n\t\t\t\t\t\t\t\t\t\t\trecord.set(\"countDownMinutes\",mi);\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\trecord.set(\"countDownMinutes\",0);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t    \t\t}\n\t\t\t    \t});\n\t\t\t    hStore.remove(a);\n\t\t\t\tconsole.debug(\"b4 filter\");\n\t\t\t\thStore.filterBy(\n\t\t\t\t\tfunction(r){return !r.get(\"Hidden\");}\n\t\t\t\t);\n\t\t\t\t\n\n\t\t\t\tvar dList = Ext.getCmp(\"dailylist\");\n\t\t\t\tdList.setHeight(dStore.getCount()*dList.getItemHeight());\n\n\t\t\t}\n\t\t},\n\t\tReminDoo.lostConnection\n\t);\n};\n*/\r\nReminDoo.T = function(k) {\r\n    return ReminDoo.D.containsKey(k) ? ReminDoo.D.get(k) : k;\r\n};\r\nReminDoo.getWeekDay = function(d) {\r\n    var s = \"\";\r\n    switch (d.getDay()) {\r\n        case 0:\r\n            s = \"Sun\";\r\n            break;\r\n        case 1:\r\n            s = \"Mon\";\r\n            break;\r\n        case 2:\r\n            s = \"Tue\";\r\n            break;\r\n        case 3:\r\n            s = \"Wed\";\r\n            break;\r\n        case 4:\r\n            s = \"Thu\";\r\n            break;\r\n        case 5:\r\n            s = \"Fri\";\r\n            break;\r\n        case 6:\r\n            s = \"Sat\";\r\n            break;\r\n    }\r\n    return ReminDoo.T(s);\r\n};\r\nReminDoo.NEW_MESSAGE = 1;\r\nReminDoo.EVENT = 2;\r\nReminDoo.SIEREN = 3;\r\nReminDoo.NEW_EVENT = 4;\r\nReminDoo.CONFIRM = 5;\r\nReminDoo.StopPlay = function() {\r\n    if (ReminDoo.player.isPlaying()) {\r\n        ReminDoo.player.stop();\r\n    }\r\n};\r\nReminDoo.Play = function(what) {\r\n    ReminDoo.StopPlay();\r\n    var url = \"audio/Very_Nice_Alarm.mp3\";\r\n    if (what == ReminDoo.NEW_MESSAGE) {\r\n        url = \"audio/amnesia.mp3\";\r\n    }\r\n    if (what == ReminDoo.NEW_EVENT) {\r\n        url = \"audio/new_event.mp3\";",2479968,46,"ReminDoo.StopPlay();\r\n        }, 10000);\r\n    }\r\n    if (what == ReminDoo.SIEREN) {\r\n        url = \"audio/kill_bill_siren.mp3\";\r\n    }\r\n    if (what == ReminDoo.CONFIRM) {\r\n        url = \"audio/dance-coco_jambo_2010.mp3\";\r\n    }\r\n    ReminDoo.player.setUrl(url);\r\n    ReminDoo.player.play();\r\n};\r\nReminDoo.isEmergency = false;\r\nReminDoo.busyFlag = false;\r\nReminDoo.isConfirmationActive = false;\r\nReminDoo.isBusy = function() {\r\n    return ReminDoo.busyFlag || ReminDoo.isConfirmationActive;\r\n};\r\nReminDoo.setBusy = function(callback, failure, retries) {\r\n    if (callback) {\r\n        if (ReminDoo.setBusy()) {\r\n",2526484,37,2329248,33,"if (retries > 0) {\r\n    ",2503439,44,"    ReminDoo.setBusy(callback, failure, retries - 1);\r\n            }, 10 * 1000",1741600,35,2029983,38,340784,32,"return false;\r\n        }\r\n    } else {\r\n        if (ReminDoo.isBusy()) ",2143775,50,"\r\n        ReminDoo.busyFlag = true;\r\n        return true;\r\n    }\r\n};\r\nReminDoo.clearBusy = function() {\r\n    ReminDoo.busyFlag = false;\r\n};\r\n// Loops\r\nReminDoo.onTimeout = function(isFirst, isTimeout) {\r\n    if (!ReminDoo.setBusy()",2418571,33,"ReminDoo.setBusy();\r\n    ReminDoo.unMask();\r\n    ReminDoo.loadMessages(isFirst);\r\n    ReminDoo.loadEvents(isFirst, isTimeout);\r\n    var tb = Ext.getCmp(\"clock\");\r\n    if (!Ext.isEmpty(tb)) {\r\n        ReminDoo.updateView(tb);\r\n    }\r\n    // Handle day roll over\r\n    if (!isFirst) {\r\n        var t = Ext.Date.clearTime(new Date());\r\n        if (Ext.Date.getDayOfYear(t) != Ext.Date.getDayOfYear(ReminDoo.currentDate)) {\r\n            ReminDoo.currentDate = t;",2489247,41,"n\").restoreCurrentDate();\r\n        }\r\n    }\r\n    ReminDoo.clearBusy();\r\n};\r\nReminDoo.Confirm = function(message, callback, failure) {\r\n    function onSuccess() {\r\n        callback();\r\n        ReminDoo.clearBusy();\r\n    }\r\n    function onSetBusy() {\r\n        ReminDoo.Play(ReminDoo.CONFIRM",2468476,36,"Main\").Confirm(message, onSuccess);\r\n    }\r\n    ReminDoo.setBusy(onSetBusy, failure, 10);\r\n};\r\nReminDoo.onEmergency = function() {\r\n    if (!ReminDoo.setBusy()",2418571,33,"ReminDoo.get(\"Emergency",2541099,39,2484384,32,"if (!Ext.isEmpty(res.Msg)) {\r\n",2453839,47,"EmergencyOn(res.Msg);\r\n                ReminDoo.Play(ReminDoo.SIEREN);\r\n                ReminDoo.isEmergency",2059040,48,"if (ReminDoo.isEmergency)",2452182,33,"isEmergenc",1713864,32,"ReminDoo.getController(\"Main\").EmergencyOff();\r\n                    if (ReminDoo.player.isPlaying()) {\r\n",2544087,33,"player.stop(",400960,44,257200,36,"ReminDoo.clearBusy();\r\n    },",2487759,32,"clearBusy();\r\n    });\r\n};\r\nReminDoo.gotoHomeT",2032550,41,"function() {\r\n",2552880,35,"gotoHome();\r\n});\r\nReminDoo.startPolling = function() {\r\n    Ext.getBody().on({\r\n        swipe:",2554269,37,"otoHomeTask.delay(60 * 1000);\r\n        },\r\n        tap:",2554269,37,"otoHomeTask.delay(60 * 1000);\r\n        }\r\n    });\r\n    ReminDoo.currentDate = Ext.Date.clearTime(new Date());\r\n",2548311,32,"currentDate;\r\n    ReminDoo.onTimeout(true);\r\n    setInterval(function() {\r\n        ReminDoo.onTimeout(false, true);\r\n    }, 60 * 1000);\r\n    setInterval(function() {\r\n        ReminDoo.onEmergency();\r\n    }, 15 * 1000);\r\n};\r\nReminDoo.parseDate = function(s) {\r\n    return Ext.Date.parse(s, \"c\");\r\n};\r\nReminDoo.NotImplemented = function() {\r\n",2538967,34,"NotAciveOption\"));\r\n};\r\nReminDoo.restoreCurrentDate",2032553,38,"function() {\r\n",2552880,35,"restoreCurrentDate();\r\n});\r\nReminDoo.Publish = function(o) {\r\n    if (Ext.isEmpty(ReminDoo.PUBNUB)) ",2418572,32,"\r\n    var channel = 'ReminDoo_' + ReminDoo.SystemId;\r\n    ReminDoo.PUBNUB.publish({\r\n        channel: channel,\r\n        message: o\r\n    });\r\n};\r\nReminDoo.PublishContacts = function(o) {\r\n    if (Ext.isEmpty(ReminDoo.PUBNUB)) ",2418572,32,"\r\n    var channel = 'ReminDoo_' + ReminDoo.SystemId + \"_\" + ReminDoo.PersonId;\r\n    //console.debug(\"publish contacts\",channel,o);\r\n",2525119,36,"ReminDoo.PUBNUB.publish({\r\n            channel: channel,\r\n            message: o\r\n        });\r\n    }, 2000);\r\n};\r\nReminDoo.PatientPingT",2032550,41,"function() {\r\n",2538967,34,"PatientPingFailed\"));\r\n});\r\nReminDoo.initPubNub = function() {\r\n    ReminDoo.PatientPingTask.delay(1000 * 60 * 5);\r\n    if (Ext.isEmpty(ReminDoo.PUBNUB)) {\r\n        ReminDoo.PUBNUB = PUBNUB.init({\r\n            publish_key: 'pub-c-9c74ce61-5f29-415a-8a55-aacd69971283',\r\n            subscribe_key: 'sub-c-56d8c102-846c-11e3-9cb4-02ee2ddab7fe'\r\n        });\r\n    }\r\n    var channel = 'ReminDoo_' + ReminDoo.SystemId + \"_\" + ReminDoo.PersonId;\r\n    ReminDoo.Channel = channel;\r\n    //console.debug(\"subscribe to channel\",channel);\r\n    ReminDoo.PUBNUB.subscribe({\r\n        channel: channel,\r\n        message: function(m) {\r\n            console.debug(\"message:\" + m.query);\r\n    ",2503439,44,"    if (m.query == \"PatientPing\")",2452182,33,"PatientPingTask.delay(1000 * 60 * 5",192752,39,"if (m.query == \"SetNotification\") {\r\n                    if ((m.value == \"1\") && (m.id == \"hc\")",221359,33,"Msg.alert(ReminDoo.T(\"NewCall\"), ReminDoo.T(\"Doctor\")",400960,43,"    if ((m.value == \"0\") && (m.id == \"hc\")",221359,33,"Msg.alert(\"\", ReminDoo.T(\"DoctorCallClose\")",400960,43,2488836,43,"loadNotifications",1080128,40,"if (m.query == \"SetNotificationStatus\") {\r\n                    if ((m.value == \"1\") && (m.id == \"hc\")",221359,33,"Msg.alert(\"\", ReminDoo.T(\"DoctorCallInProcess\")",400960,43,2488836,43,"loadNotifications",1080128,40,"if (m.query == \"ConfirmEvent\"",2434112,48,2548348,33,2489040,36,"Event\").loadEvents(d",106096,36,"    if ((m.query == \"MessageReceive\") || (m.query == \"MessageReply\")) {",2453833,46,"VoiceMail\")",2505518,38,"ReminDoo.getController(\"Mail\")",2538930,37,"}",2414704,40,");\r\n};\r\nReminDoo.getSimPicture = function() {\r\n    return \"\";\r\n};\r\nReminDoo.alert = function(header, msg, callback) {\r\n    Ext.Msg.alert(ReminDoo.T(header), ReminDoo.T(msg), callback);\r\n}",829341,40,824301,181058,1005359,1026305,2036490,22271,2058761,499229,"ReminDoo.js",2557949,51]