["function _08b8563849a2f0fd9e9faaf628f684171d11ec06(){};function _44d35595e9687c57a8de5707915a60eb457bfe1d(){};",21390,37,92,1048429,1048521,1048576,2099934,93,2097190,323751,"This is a specialized component which displays a Time Picker on the screen, allowing for the selection of a time (down to milliseconds)\n *",2228305,50,2228358,43," ## Examples\n *\n *     @example\n *     var timePicker = Ext.create('Ext.ux.picker.Time');\n *     Ext.Viewport.add( timePicker );\n *     timePicker.show();\n *     \n * You can add up to 5 slots: hours, minutes, seconds, milliseconds, meridien\n * \n *     @example\n *     var timePicker = Ext.create('Ext.ux.picker.Time',{\n *         slotOrder: ['hours','minutes','seconds','milliseconds','meridien']",1214318,36," timePicker );\n *     timePicker.show();\n *     \n * You can set custom value lists\n * \n *     @example\n *     var timePicker = Ext.create('Ext.ux.picker.Time',{\n *         hourList: [3,5,8,9,10]",1214318,36," timePicker );\n *     timePicker.show();\n * \n * You can set custom start and end values for each slot, as well as custom increments\n * \n *     \n *     @example\n *     var timePicker = Ext.create('Ext.ux.picker.Time',{\n *         startHour: 8,\n *         endHour: 18,\n *         increment:2",1214318,36," timePicker );\n *     timePicker.show();     \n *     \n */\r\nExt.define('Ext.ux.picker.",2394929,54,2394987,43,2395037,58,"String} hour",2230492,42,"hour",2230539,51,"hourText: 'Hour",848912,41,"minute",2230492,43,"inute",2230539,52,"inuteText",2396491,50,"second",2230492,42,"seconds",2230539,51,"secondText: 'Seconds",848912,41,"millisecond",2230492,43,"illisecond",2230539,52,"illisecondText: 'Milliseconds",848912,41,"meridie",2396544,43,"meridiem",2230539,52,"eridiemText",2396703,41,"String} AMText\n         * The text to use for the ante-meridi",1983039,46,"AMText: 'AM",848912,41,"PMText\n         * The text to use for the post-meridi",1983039,46,"PMText: 'PM",848912,33,"Number} startHour\n         * The start hour for the time picker. If meridiem is specified in the {@link #slotOrder}, \n         * {@link #startHour} will be set to 0 (for midnight) if this value is not set at config tim",1113200,44,"startHour",1176943,35,"Number} endHour\n         * The end hour for the time picker. If {@link #endHour} is greater than 12, \n         * meridiem slot will be ignor",1794176,45,"endHour: 12",1295520,40,"startMinute\n         * The start minute for the tim",2395149,52,"startMinute",2198256,33," {Number} endMinute\n         * The end minute for the tim",2395149,52,"endMinute: 5",1295519,41,"startSecond\n         * The start second for the tim",2395149,52,"startSecond",2198256,33," {Number} endSecond\n         * The end second for the tim",2395149,52,"endSecond: 5",1295519,41,"startMillisecond\n         * The start millisecond for the tim",2395149,52,"startMillisecond",2198256,33," {Number} endMillisecond\n         * The end millisecond for the tim",2395149,52,"endMillisecond: 999",1330560,39,"hourList\n         * Array of hours to use in the hour picker. If {@link #hourList} is defined, {@link #startHour},\n         * {@link #endHour} and {@link #hourIncrement} will be ignor",1794176,45,"hourLi",1474528,40,"Array} minuteList\n         * Array of minutes to use in the minute picker. If {@link #minuteList} is defined, {@link #startMinute},\n         * {@link #endMinute} and {@link #minuteIncrement} will be ignor",1794176,45,"minuteLi",1474528,40,"Array} secondList\n         * Array of seconds to use in the second picker. If {@link #secondList} is defined, {@link #startSecond},\n         * {@link #endSecond} and {@link #secondIncrement} will be ignor",1794176,45,"secondLi",1474528,40,"Array} millisecondList\n         * Array of milliseconds to use in the millisecond picker. If {@link #millisecondList} is defined, {@link #startMillisecond},\n         * {@link #endMillisecond} and {@link #millisecondIncrement} will be ignor",1794176,45,"millisecondLi",1474528,40,"Number} hourIncrement\n         * The increment value for hou",1237552,45,"hourIncrement",1176943,35,"Number} minuteIncrement\n         * The increment value for minu",1237696,46,"minuteIncrement: ",1795360,41,"secondIncrement\n         * The increment value for secon",1176080,45,"secondIncrement: ",1795360,41,"millisecondIncrement\n         * The increment value for millisecon",1176080,45,"millisecondIncrement: 100",1330560,39,"slotOrder\n         * The order of slots in the picker",1935600,44,"lotOrder: [\r\n",2519769,33,"'minute',\r\n            'meridiem'\r\n        ]",2471711,48,861184,32,1227904,41,2084284,36,"createSlots();",1254207,33,2398159,66,"var useMeridiem = Ext.Array.contains(this.getSlotOrder(), 'meridiem');",2398633,41,"hour: useMeridiem && value.getHours() == 0 ? 12 : value.getHours()",2398813,64,"second: value.getSeconds(),\r\n                millisecond: value.getMilliseconds(),\r\n                meridiem: value.getHours() >= 12 ? this.getPMText() : this.getAMText",1614208,39,2398924,105,2208539,125,"date = new Date(),\r\n            useMeridiem = Ext.Array.contains(this.getSlotOrder(), 'meridiem'),\r\n            hour, minute, second, millisecond, meridiem, item, i;\r\n        // get slot values",2032000,88,2399289,87,2233292,46," ",2233338,78,"hour",2233468,59,"// process hour\r\n        // make sure it's a number\r\n        if (Ext.isNumber(values.hour)) {\r\n            // if meridiem is active, need to smartly transform value\r\n            if (useMeridiem) {\r\n                // if PM is selected\r\n                if (values.meridiem == this.getPMText()",2398564,32,"values.hour < 12 ? values.hour + 12 : values.hou",141680,35,"    if (values.meridiem == this.getAMText()",2398564,32,"values.hour == 12 ? 0 : values.hou",141680,36," else {\r\n                hour = Ext.isNumber(values.hour) ? values.hour : 0",1410688,38,"inute = Ext.isNumber(values.minute) ? values.minute : 0;\r\n        second = Ext.isNumber(values.second) ? values.second : 0;\r\n        millisecond = Ext.isNumber(values.millisecond) ? values.millisecond : 0;\r\n        //meridiem = !Ext.isEmpty( values.meridiem ) ? values.meridiem : null;\r\n",643056,44,"date.getMonth(), date.getDate(), hour, minute, second, millisecond)",1616921,37,"ll slot",2402637,171,2236493,32,"ln, i,\r\n            slots = [];\r\n        // cleanup config\r\n        me.cleanupConfig();\r\n        // create array of slot data",2237558,58,"var slot = me.createSlot(item);",2208005,43,"slots.push(slot",326030,40,2237692,82,2357375,35,"createSlo",858684,33,"me = this;\r\n",409247,37,2406254,102,2237999,37,"me.getHourCollection(),\r\n                    title: me",2406488,43,"1",6736,34,2406619,32,"// make sure \"use\" flag is on\r\n",299524,39,"me.getSlotOrder(), 'minute'",1732784,33,87839,33,"'minute',\r\n",2514455,66,"data: me.getMinuteCollection()",2583394,34,"me",2406859,39,"    flex: 1",5693,43,469232,35,"    case 'second':\r\n                // make sure \"use\" flag is on\r\n",299524,39,"me.getSlotOrder(), 'minute') && Ext.Array.contains(me.getSlotOrder(), 'second'",1732784,33,87839,33,"'second',\r\n",2514455,66,"data: me.getSecondCollection()",2583394,34,"me.getSecondText()",2553700,34,5693,43,469232,35,"    case 'millisecond':\r\n                // make sure \"use\" flag is on\r\n",299524,39,"me.getSlotOrder(), 'minute') && Ext.Array.contains(me.getSlotOrder(), 'second') && Ext.Array.contains(me.getSlotOrder(), 'millisecond'",1732784,33,87839,33,"'millisecond',\r\n",2514455,66,"data: me.getMillisecondCollection()",2583394,34,"me.getMillisecondText()",2553700,34,5693,43,469232,35,"    case 'meridiem':\r\n                // make sure \"use\" flag is on, and that the end hour is less than 13\r\n",299524,39,"me.getSlotOrder(), 'meridiem') && me.getEndHour() <= 12",274752,32,87839,33,"'meridiem',\r\n",2514455,66,"data",2508432,68,"text: me.getAMText()",628848,35,"value: me.getAMText()\r\n        ",801883,44,2547328,43,"text: me.getPMText()",628848,35,"value: me.getPMText()",94095,57,"]",2583394,34,"me.getMeridiemText()",2553700,34,5693,43,469232,42,"},\r\n    cleanup",1271438,34,"me = this,\r\n            shour = me.getStartHour(),\r\n            ehour = me.getEndHour(),\r\n            sminute = me.getStartMinute(),\r\n            eminute = me.getEndMinute(),\r\n            ssecond = me.getStartSecond(),\r\n            esecond = me.getEndSecond(),\r\n            smilli = me.getStartMillisecond(),\r\n            emilli = me.getEndMillisecond(),\r\n            useMeridiem = Ext.Array.contains(me.getSlotOrder(), 'meridiem');\r\n        // evaluate user config\r\n        shour = shour < 1 || !Ext.isNumber(shour) ? useMeridiem ? 1 : 0 : shour;\r\n        ehour = ehour > 23 || !Ext.isNumber(ehour) ? Ext.Array.contains(me.getSlotOrder(), 'meridiem') ? 12 : 23 : ehour;\r\n        sminute = sminute < 0 || !Ext.isNumber(sminute) ? 0 : sminute;\r\n        eminute = eminute > 59 || !Ext.isNumber(eminute) ? 59 : eminute;\r\n        ssecond = ssecond < 1 || !Ext.isNumber(ssecond) ? 0 : ssecond;\r\n        esecond = eminute > 59 || !Ext.isNumber(esecond) ? 59 : esecond;\r\n        smilli = smilli < 1 || !Ext.isNumber(smilli) ? 0 : smilli;\r\n        emilli = emilli > 59 || !Ext.isNumber(emilli) ? 999 : emilli;\r\n        // set values\r\n        me.setStartHour(shour);\r\n        me.setEndHour(ehour);\r\n        me.setStartMinute(sminute);\r\n        me.setEndMinute(eminute);\r\n        me.setStartSecond(ssecond);\r\n        me.setEndSecond(esecond);\r\n        me.setStartMillisecond(smilli);\r\n        me.setEndMillisecond(emilli);\r\n    },\r\n    getHourCol",1890255,59,"hours = [];\r\n        // compile collection of hour values\r\n        // if an hour list is defined\r\n        if (!!me.getHourList()) {\r\n            var list = me.getHourList()",288448,32,"ist",2015103,33,"// ensure that hour is not greater than 23...otherwise, it will create an invalid date\r\n                if (i < 24) {\r\n        ",2404303,42,"        text: list[i]",87876,34,"list[i]",6010,58,"}\r\n        } else // otherwise, increment between start and end hour by increment setting\r\n        {\r\n            for (i = me.getStartHour(); i <= me.getEndHour(); i += me.getHourIncrement()) {\r\n    ",2404303,42,"    text: i,\r\n    ",2404366,38,1961664,39,"    return hours;\r\n    },\r\n    getMinuteCol",1890255,59,"minutes = [];\r\n        // compile collection of minute values\r\n        // if a minute list is defined\r\n        if (!!me.getMinuteList()) {\r\n            var list = me.getMinuteList()",288448,32,"ist",2015103,33,2404494,32,"    text: list[i] < 10 ? '0' + list[i] : list[i],\r\n                    value: list",1961647,50," else // otherwise, increment minutes automatically by increment setting\r\n        {\r\n            for (i = me.getStartMinute(); i <= me.getEndMinute(); i += me.getMinuteIncrement()) {\r\n    ",2404482,44,"    text: i < 10 ? '0' + i : i,\r\n    ",2404366,38,1961664,39,"    return minutes;\r\n    },\r\n    getSecondCol",1890255,61,"conds = [];\r\n        // compile collection of second values\r\n        // if a second list is defined\r\n        if (!!me.getSecondList()) {\r\n            var list = me.getSecondList()",288448,32,"ist",2015103,33,"// ensure that second is not greater than 59...otherwise, it will create an invalid date\r\n                if (i < 60) {\r\n                    second",86991,34,"text: list[i] < 10 ? '0' + list[i] : list[i]",87876,34,"list[i]",6010,58,"}\r\n        } else // otherwise, increment seconds automatically by increment setting\r\n        {\r\n            for (i = me.getStartSecond(); i <= me.getEndSecond(); i += me.getSecondIncrement()) {\r\n                seconds.push({\r\n                    text: i < 10 ? '0' + i : i,\r\n    ",2404366,38,1961664,39,"    return seconds;\r\n    },\r\n    getMillisecondCol",1890255,59,"milliseconds = [];\r\n        // compile collection of milliseconds values\r\n        // if a millisecond list is defined\r\n        if (!!me.getMillisecondList()) {\r\n            var list = me.getMillisecondList()",288448,32,"ist",2015103,33,"// ensure that millisecond is not greater than 999...otherwise, it will create an invalid date\r\n                if (i < 1000) {\r\n                    millisecond",86991,34,"text: list[i] < 10 ? '0' + list[i] : list[i]",87876,34,"list[i]",6010,58,"}\r\n        } else // otherwise, increment milliseconds automatically by increment setting\r\n        {\r\n            for (i = me.getStartMillisecond(); i <= me.getEndMillisecond(); i += me.getMillisecondIncrement()) {\r\n                milliseconds.push({\r\n                    text: i < 10 ? '0' + i : i,\r\n    ",2404366,38,1961664,39,"    return milliseconds",1213821,35,2241677,49,2409858,103,2409965,106,2242158,296,2244144,231,"timepick",2255904,45,"Start Time",2410928,37,"starttime",2244481,110,1657242,46,"ux.field.Tim",2245581,35,"DatePicke",1267310,38,"TimePicker',\r\n    xtype: 'timepicker",2254671,51,2247044,259,"'h:i A",848912,41,"default time\n         * The default time to be used when initilizing the field\n         * Example: '8:00', '14:50'\n         */\r\n        defaultTime: '8:00'",2259976,57,"date = new Date();",569321,32," whatsoever, set a default",658928,32,2247919,41,"var defaultTime = this.getDefaultTime().split(':');",639182,38,636484,39,", defaultTime[0], defaultTime[1]",1158735,33,"value is an object, create a new date with time values based on object",2247983,66,"date.get",636484,39,2416245,76,2250045,57,"picker = Ext.factory(picker, 'Ext.ux.picker.Time');\r\n        picker.setHidden(true);\r\n",2419032,43,2250731,40,2247041,102,"time in this field.\n     * Accepts any valid date/",2415423,83,"*/",2218128,38,2417550,58,"Tim",2249398,103,2250255,187,"ux.picker.Tim",2250452,114,"// add listeners",2250556,196,2420925,98708,"tim",2503948,32,"picker: {\r\n                    startHour: 0,\r\n                    endHour: 24,\r\n                    useMeridiem: false,",2519681,187,"//ampm ",2519872,93,",\r\n",2570313,58,"c",2222460,42,2601609,44,"Event\").onStartChang",2299760,77,2519983,60,"dat",2520010,295,"tim",2503948,32,2519672,371,"dat",2520682,2828,2523662,629,2524870,14070,",\r\n    onStartChang",2273807,49,2535728,32,"endTimeFld = form.down(\"#end-time\");\r\n        //var ndt ",2524607,33,"\"H:i\");\r\n",2524658,45,"ewValue, Ext.Date.HOUR, 1);\r\n",2524735,46,2495471,37,2538976,65833,"5",2604810,10979]